@use '../core' as *;
@use '../media' as *;
@use '../media/variables' as *;
@use './helpers' as *;

.container,
.containerPx {
	#{cssVarName('grid-ml')}: calc(#{cssVar('grid-mx')} + #{cssVar('container-ml')});
	#{cssVarName('grid-mr')}: calc(#{cssVar('grid-mx')} + #{cssVar('container-mr')});
}

.container {
	margin-left: cssVar('grid-ml');
	margin-right: cssVar('grid-mr');
}

.containerPx {
	padding-left: cssVar('grid-ml');
	padding-right: cssVar('grid-mr');
}

.row {
	display: flex;
	flex-wrap: wrap;
	gap: cssVar('grid-gap');
}

@for $i from 1 through 24 {
	.col#{$i} {
		width: colsWidth($i);
		min-width: colsWidth($i);
		max-width: colsWidth($i);
	}
	.colOffset#{$i} {
		margin-left: colsOffset($i);
	}
}

@each $bp in $breakpointsNames {
	@include mediaUp($bp) {
		@for $i from 1 through 24 {
			.#{$bp}Col#{$i} {
				width: colsWidth($i);
				min-width: colsWidth($i);
				max-width: colsWidth($i);
			}
			.#{$bp}ColOffset#{$i} {
				margin-left: colsOffset($i);
			}
		}
	}
}
